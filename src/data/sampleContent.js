// data/sampleContent.js - Sample textbook content for demonstrations

/**
 * Sample textbook content for testing and demonstrations
 */
export const sampleTextbooks = [
  {
    id: "ml-intro",
    title: "Introduction to Machine Learning",
    subject: "Computer Science",
    grade: "Undergraduate",
    difficulty: "intermediate",
    language: "English",
    estimatedTime: "4 hours",
    description: "Comprehensive introduction to machine learning concepts, algorithms, and applications",
    chapters: [
      {
        id: "ml-ch1",
        title: "What is Machine Learning?",
        order: 1,
        content: `# What is Machine Learning?

Machine Learning (ML) is a subset of artificial intelligence (AI) that enables computers to learn and make decisions from data without being explicitly programmed for every task.

## Core Concepts

### Definition
Machine learning is the scientific study of algorithms and statistical models that computer systems use to perform tasks without explicit instructions, relying instead on patterns and inference.

### Key Components
1. **Data**: The fuel that drives machine learning
2. **Algorithms**: Mathematical procedures that find patterns
3. **Models**: The output of algorithms trained on data
4. **Predictions**: The results generated by trained models

## Types of Machine Learning

### 1. Supervised Learning
- **Definition**: Learning with labeled examples
- **Goal**: Predict outcomes for new, unseen data
- **Examples**: 
  - Email spam detection
  - Medical diagnosis
  - Stock price prediction

**Common Algorithms:**
- Linear Regression
- Decision Trees
- Support Vector Machines (SVM)
- Random Forest
- Neural Networks

### 2. Unsupervised Learning
- **Definition**: Finding hidden patterns in data without labels
- **Goal**: Discover structure in data
- **Examples**:
  - Customer segmentation
  - Anomaly detection
  - Data compression

**Common Algorithms:**
- K-Means Clustering
- Hierarchical Clustering
- Principal Component Analysis (PCA)
- Association Rules

### 3. Reinforcement Learning
- **Definition**: Learning through interaction and feedback
- **Goal**: Maximize cumulative reward
- **Examples**:
  - Game playing (Chess, Go)
  - Autonomous vehicles
  - Recommendation systems

**Key Concepts:**
- **Agent**: The learner/decision maker
- **Environment**: The world the agent interacts with
- **Actions**: What the agent can do
- **Rewards**: Feedback from the environment
- **Policy**: The agent's strategy

## The Machine Learning Process

### 1. Problem Definition
- Identify the business problem
- Determine if ML is the right solution
- Define success metrics

### 2. Data Collection
- Gather relevant data
- Ensure data quality and completeness
- Consider privacy and ethical implications

### 3. Data Preprocessing
- Clean and prepare data
- Handle missing values
- Feature engineering and selection

### 4. Model Selection
- Choose appropriate algorithms
- Consider computational constraints
- Balance complexity vs. interpretability

### 5. Training
- Split data into training/validation/test sets
- Train models on training data
- Tune hyperparameters using validation data

### 6. Evaluation
- Test model performance on unseen data
- Use appropriate evaluation metrics
- Check for overfitting and bias

### 7. Deployment
- Integrate model into production systems
- Monitor performance in real-world scenarios
- Plan for model updates and maintenance

## Applications of Machine Learning

### Healthcare
- **Medical Imaging**: X-ray and MRI analysis
- **Drug Discovery**: Accelerating pharmaceutical research
- **Personalized Medicine**: Tailored treatment plans

### Technology
- **Search Engines**: Improving search results
- **Voice Assistants**: Natural language processing
- **Computer Vision**: Image and video analysis

### Business
- **Fraud Detection**: Identifying suspicious transactions
- **Customer Analytics**: Understanding user behavior
- **Supply Chain**: Optimizing logistics and inventory

### Transportation
- **Autonomous Vehicles**: Self-driving cars
- **Traffic Management**: Optimizing traffic flow
- **Route Optimization**: GPS and navigation systems

## Challenges and Considerations

### Technical Challenges
- **Data Quality**: Dealing with noisy, incomplete data
- **Scalability**: Handling large datasets efficiently
- **Interpretability**: Understanding complex model decisions

### Ethical Considerations
- **Bias and Fairness**: Ensuring equitable outcomes
- **Privacy**: Protecting sensitive information
- **Transparency**: Making AI decisions explainable

### Practical Challenges
- **Cost**: Computational and human resources
- **Skills Gap**: Need for specialized expertise
- **Integration**: Incorporating ML into existing systems

## Summary

Machine learning is transforming how we solve complex problems by enabling computers to learn from data. Understanding the different types of ML, the development process, and real-world applications provides a foundation for leveraging this powerful technology effectively.

**Key Takeaways:**
- ML enables computers to learn patterns from data
- Three main types: supervised, unsupervised, reinforcement
- Success requires careful attention to data, algorithms, and evaluation
- Applications span virtually every industry
- Ethical considerations are crucial for responsible AI development`,
        summary: "Introduction to machine learning fundamentals, types of learning, the ML process, applications, and challenges.",
        learningObjectives: [
          "Define machine learning and distinguish it from traditional programming",
          "Identify the three main types of machine learning",
          "Describe the machine learning development process",
          "Recognize real-world applications of ML across industries",
          "Understand key challenges and ethical considerations"
        ],
        keywords: ["machine learning", "supervised learning", "unsupervised learning", "reinforcement learning", "algorithms", "data science"],
        estimatedReadTime: "45 minutes"
      },
      {
        id: "ml-ch2", 
        title: "Data Preprocessing and Feature Engineering",
        order: 2,
        content: `# Data Preprocessing and Feature Engineering

Data preprocessing is often the most time-consuming but crucial step in machine learning. Quality data leads to better models, while poor data can make even the best algorithms fail.

## Why Data Preprocessing Matters

### The 80/20 Rule
Data scientists typically spend 80% of their time on data preparation and only 20% on actual modeling. This investment is worthwhile because:

- **Garbage In, Garbage Out**: Poor data quality leads to poor model performance
- **Algorithm Assumptions**: Most ML algorithms assume clean, well-formatted data
- **Feature Quality**: Good features can make simple models outperform complex ones

## Types of Data Issues

### 1. Missing Data
Missing data occurs when no value is stored for a variable in an observation.

**Types of Missing Data:**
- **MCAR (Missing Completely at Random)**: Missing data is random
- **MAR (Missing at Random)**: Missing data depends on observed variables
- **MNAR (Missing Not at Random)**: Missing data depends on unobserved variables

**Handling Strategies:**
- **Deletion**: Remove rows or columns with missing data
- **Imputation**: Fill in missing values with estimated values
- **Advanced Methods**: Multiple imputation, model-based approaches

### 2. Outliers
Outliers are data points that significantly differ from other observations.

**Detection Methods:**
- Statistical methods (Z-score, IQR)
- Visualization (box plots, scatter plots)
- Model-based approaches (Isolation Forest)

**Handling Strategies:**
- Remove outliers (if they're errors)
- Transform data (log transformation)
- Use robust algorithms
- Cap/floor extreme values

### 3. Inconsistent Data
Data inconsistencies can arise from multiple sources, different formats, or human error.

**Common Issues:**
- Different date formats
- Inconsistent categorical values
- Mixed data types in the same column
- Duplicate records

## Data Cleaning Techniques

### 1. Handling Missing Values

**Simple Imputation:**
\`\`\`python
# Mean imputation for numerical data
df['age'].fillna(df['age'].mean(), inplace=True)

# Mode imputation for categorical data  
df['category'].fillna(df['category'].mode()[0], inplace=True)

# Forward fill
df['price'].fillna(method='ffill', inplace=True)
\`\`\`

**Advanced Imputation:**
- K-Nearest Neighbors (KNN) imputation
- Regression imputation
- Multiple imputation

### 2. Outlier Treatment

**Statistical Methods:**
\`\`\`python
# Z-score method
z_scores = np.abs(stats.zscore(df['column']))
df = df[z_scores < 3]

# IQR method
Q1 = df['column'].quantile(0.25)
Q3 = df['column'].quantile(0.75)
IQR = Q3 - Q1
df = df[~((df['column'] < (Q1 - 1.5 * IQR)) | 
          (df['column'] > (Q3 + 1.5 * IQR)))]
\`\`\`

### 3. Data Standardization

**Scaling Numerical Features:**
\`\`\`python
from sklearn.preprocessing import StandardScaler, MinMaxScaler

# Standardization (Z-score normalization)
scaler = StandardScaler()
df_scaled = scaler.fit_transform(df[['feature1', 'feature2']])

# Min-Max normalization
minmax_scaler = MinMaxScaler()
df_normalized = minmax_scaler.fit_transform(df[['feature1', 'feature2']])
\`\`\`

## Feature Engineering

Feature engineering is the process of creating new features from existing data to improve model performance.

### 1. Creating New Features

**Mathematical Transformations:**
- **Polynomial Features**: x², x³, sqrt(x), log(x)
- **Ratios**: feature1/feature2
- **Combinations**: feature1 + feature2, feature1 * feature2

**Date/Time Features:**
- Extract year, month, day, hour from timestamps
- Calculate time differences
- Create cyclical features (sin/cos for hours, months)

**Text Features:**
- Word count, character count
- Presence of specific keywords
- Sentiment scores

### 2. Feature Selection

**Filter Methods:**
- Correlation analysis
- Mutual information
- Chi-square test

**Wrapper Methods:**
- Forward selection
- Backward elimination
- Recursive feature elimination

**Embedded Methods:**
- LASSO regularization
- Tree-based feature importance

### 3. Dimensionality Reduction

**Principal Component Analysis (PCA):**
\`\`\`python
from sklearn.decomposition import PCA

pca = PCA(n_components=0.95)  # Keep 95% of variance
X_reduced = pca.fit_transform(X)
\`\`\`

**Other Techniques:**
- t-SNE (for visualization)
- Linear Discriminant Analysis (LDA)
- Independent Component Analysis (ICA)

## Encoding Categorical Variables

### 1. One-Hot Encoding
\`\`\`python
pd.get_dummies(df, columns=['category'], drop_first=True)
\`\`\`

### 2. Label Encoding
\`\`\`python
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
df['category_encoded'] = le.fit_transform(df['category'])
\`\`\`

### 3. Target Encoding
Replace categories with mean target value for that category.

## Data Splitting and Validation

### Train-Validation-Test Split
\`\`\`python
from sklearn.model_selection import train_test_split

# First split: separate test set
X_temp, X_test, y_temp, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y
)

# Second split: separate train and validation
X_train, X_val, y_train, y_val = train_test_split(
    X_temp, y_temp, test_size=0.25, random_state=42, stratify=y_temp
)
\`\`\`

### Cross-Validation
\`\`\`python
from sklearn.model_selection import cross_val_score, StratifiedKFold

cv = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)
scores = cross_val_score(model, X_train, y_train, cv=cv, scoring='accuracy')
\`\`\`

## Best Practices

### 1. Understand Your Data
- Perform exploratory data analysis (EDA)
- Visualize distributions and relationships
- Check data types and ranges

### 2. Document Your Process
- Keep track of transformations applied
- Save preprocessing pipelines
- Document decisions and rationale

### 3. Avoid Data Leakage
- Don't use future information to predict the past
- Be careful with time-series data
- Separate preprocessing for train/test sets

### 4. Iterate and Experiment
- Try different preprocessing techniques
- Monitor impact on model performance
- Use domain knowledge to guide decisions

## Common Pitfalls

1. **Data Leakage**: Using information not available at prediction time
2. **Overfitting**: Creating too many features relative to samples
3. **Inconsistent Preprocessing**: Different transformations for train/test
4. **Ignoring Data Quality**: Not addressing obvious data issues
5. **Feature Explosion**: Creating too many irrelevant features

## Summary

Data preprocessing and feature engineering are foundational skills in machine learning. The quality of your preprocessing often determines the success of your entire project. Remember:

- Start with thorough exploratory data analysis
- Address data quality issues systematically
- Create meaningful features using domain knowledge
- Validate your preprocessing choices
- Document and save your preprocessing pipeline

Quality preprocessing takes time but is essential for building robust, reliable machine learning models.`,
        summary: "Comprehensive guide to data preprocessing including handling missing data, outliers, feature engineering, and encoding techniques.",
        learningObjectives: [
          "Identify and handle different types of data quality issues",
          "Apply appropriate techniques for missing data and outliers",
          "Create new features through feature engineering",
          "Encode categorical variables properly",
          "Implement data splitting and validation strategies"
        ],
        keywords: ["data preprocessing", "feature engineering", "missing data", "outliers", "encoding", "validation"],
        estimatedReadTime: "60 minutes"
      }
    ]
  },

  {
    id: "organic-chem",
    title: "Organic Chemistry Fundamentals", 
    subject: "Chemistry",
    grade: "High School",
    difficulty: "intermediate",
    language: "English",
    estimatedTime: "3 hours",
    description: "Introduction to organic chemistry covering carbon compounds, functional groups, and basic reactions",
    chapters: [
      {
        id: "oc-ch1",
        title: "Carbon and Its Compounds",
        order: 1,
        content: `# Carbon and Its Compounds

Carbon is truly the element of life. Its unique properties make it the backbone of all organic molecules, from simple methane to complex proteins and DNA.

## Why Carbon is Special

### Unique Properties of Carbon

**1. Tetravalency**
- Carbon has 4 valence electrons in its outer shell
- Forms 4 covalent bonds to achieve stable configuration
- Can bond with other carbons and various elements (H, O, N, S, P)

**2. Catenation**
- Ability to form long chains and rings with other carbon atoms
- Creates the backbone for complex organic molecules
- Allows for enormous molecular diversity

**3. Multiple Bond Formation**
- Can form single, double, and triple bonds
- Provides flexibility in molecular structure
- Affects molecular properties and reactivity

## Types of Carbon Compounds

### Hydrocarbons
Compounds containing only carbon and hydrogen atoms.

#### 1. Alkanes (Saturated Hydrocarbons)
- **General Formula**: CₙH₂ₙ₊₂
- **Bond Type**: Only single C-C bonds
- **Hybridization**: sp³

**Examples:**
- Methane (CH₄): Simplest alkane
- Ethane (C₂H₆): Two carbon atoms
- Propane (C₃H₈): Three carbon atoms
- Butane (C₄H₁₀): Four carbon atoms

**Properties:**
- Relatively unreactive
- Undergo combustion readily
- Used as fuels

#### 2. Alkenes (Unsaturated Hydrocarbons)
- **General Formula**: CₙH₂ₙ
- **Bond Type**: Contains C=C double bonds
- **Hybridization**: sp²

**Examples:**
- Ethene (C₂H₄): Simplest alkene
- Propene (C₃H₆): Three carbon atoms
- Butene (C₄H₈): Four carbon atoms

**Properties:**
- More reactive than alkanes
- Undergo addition reactions
- Used in polymer production

#### 3. Alkynes
- **General Formula**: CₙH₂ₙ₋₂
- **Bond Type**: Contains C≡C triple bonds
- **Hybridization**: sp

**Examples:**
- Ethyne (C₂H₂): Simplest alkyne, used in welding
- Propyne (C₃H₄): Three carbon atoms

## Structural Representation

### Different Ways to Show Organic Molecules

**1. Molecular Formula**
Shows the number and type of atoms: C₆H₁₂O₆

**2. Structural Formula**
Shows how atoms are connected:
\`\`\`
H   H   H
|   |   |
H-C-C-C-H
|   |   |
H   H   H
\`\`\`

**3. Condensed Formula**
Shortened version: CH₃-CH₂-CH₃

**4. Line Formula (Skeletal)**
Shows carbon skeleton without explicitly drawing C and H:
\`\`\`
    /\\/\\
\`\`\`

## Isomerism

Compounds with the same molecular formula but different structural arrangements.

### Types of Isomerism

**1. Structural Isomerism**
- **Chain Isomerism**: Different carbon chain arrangements
- **Position Isomerism**: Different positions of functional groups
- **Functional Isomerism**: Different functional groups

**Example - C₄H₁₀:**
- Butane: CH₃-CH₂-CH₂-CH₃ (straight chain)
- Methylpropane: CH₃-CH(CH₃)-CH₃ (branched chain)

**2. Stereoisomerism**
- **Geometric (cis-trans)**: Different spatial arrangements around double bonds
- **Optical**: Mirror image isomers (enantiomers)

## Functional Groups

Specific groups of atoms that determine the chemical properties of organic compounds.

### Common Functional Groups

**1. Hydroxyl Group (-OH)**
- **Found in**: Alcohols
- **Example**: Ethanol (CH₃CH₂OH)
- **Properties**: Polar, forms hydrogen bonds

**2. Carbonyl Group (C=O)**
- **Aldehydes**: -CHO at the end of chain
- **Ketones**: C=O in the middle of chain
- **Properties**: Polar, reactive

**3. Carboxyl Group (-COOH)**
- **Found in**: Carboxylic acids
- **Example**: Acetic acid (CH₃COOH)
- **Properties**: Acidic, forms salts

**4. Amino Group (-NH₂)**
- **Found in**: Amines and amino acids
- **Properties**: Basic, forms hydrogen bonds

**5. Ester Group (-COO-)**
- **Formed by**: Reaction of acids and alcohols
- **Found in**: Fats, oils, fragrances

## Chemical Reactions of Organic Compounds

### 1. Combustion
Complete combustion produces CO₂ and H₂O:
CH₄ + 2O₂ → CO₂ + 2H₂O + energy

### 2. Substitution Reactions
One atom/group replaces another:
CH₄ + Cl₂ → CH₃Cl + HCl (in presence of light)

### 3. Addition Reactions
Molecules add across double/triple bonds:
C₂H₄ + H₂ → C₂H₆ (hydrogenation)
C₂H₄ + Br₂ → C₂H₄Br₂ (halogenation)

### 4. Elimination Reactions
Removal of atoms/groups to form double bonds:
C₂H₅OH → C₂H₄ + H₂O (dehydration)

## Importance of Organic Compounds

### In Living Systems
- **Carbohydrates**: Energy source (glucose, starch)
- **Proteins**: Structure and enzymes (amino acids)
- **Lipids**: Energy storage and membranes
- **Nucleic Acids**: Genetic information (DNA, RNA)

### In Industry
- **Plastics**: Polymers from simple monomers
- **Pharmaceuticals**: Complex organic molecules
- **Fuels**: Hydrocarbons for energy
- **Solvents**: Organic liquids for dissolution

### In Daily Life
- **Food**: Organic molecules provide nutrition
- **Clothing**: Natural (cotton) and synthetic fibers
- **Cosmetics**: Organic compounds for beauty products
- **Cleaning**: Soaps and detergents

## Summary

Carbon's unique ability to form stable bonds with itself and other elements makes it the foundation of all organic chemistry. Understanding the structure, properties, and reactions of carbon compounds is essential for studying biochemistry, medicine, materials science, and many other fields.

**Key Points to Remember:**
- Carbon forms four covalent bonds (tetravalency)
- Catenation allows formation of chains and rings
- Hydrocarbons are the simplest organic compounds
- Functional groups determine chemical properties
- Isomerism creates molecular diversity
- Organic compounds are essential for life and technology`,
        summary: "Introduction to carbon's unique properties, hydrocarbon types, functional groups, and the importance of organic compounds.",
        learningObjectives: [
          "Explain why carbon is uniquely suited for forming organic compounds",
          "Classify hydrocarbons as alkanes, alkenes, or alkynes",
          "Identify common functional groups and their properties", 
          "Recognize different types of isomerism",
          "Describe the importance of organic compounds in life and industry"
        ],
        keywords: ["carbon", "hydrocarbons", "functional groups", "isomerism", "organic chemistry"],
        estimatedReadTime: "50 minutes"
      }
    ]
  }
];

/**
 * Content templates for different educational levels and subjects
 */
export const contentTemplates = {
  // Mathematics templates
  mathematics: {
    elementaryLevel: {
      chapterStructure: [
        "Learning Goals",
        "What You'll Discover",
        "Let's Explore Together",
        "Practice Time", 
        "Real-World Connections",
        "What We Learned"
      ],
      writingStyle: "friendly",
      includeGames: true,
      visualAids: "heavy"
    },
    
    middleSchool: {
      chapterStructure: [
        "Chapter Objectives",
        "Introduction", 
        "Key Concepts",
        "Worked Examples",
        "Practice Problems",
        "Applications",
        "Chapter Summary"
      ],
      writingStyle: "conversational",
      includeCalculator: true,
      realWorldExamples: true
    },
    
    highSchool: {
      chapterStructure: [
        "Learning Objectives",
        "Prerequisites Review",
        "Theoretical Foundation", 
        "Definitions and Theorems",
        "Solved Examples",
        "Problem Sets",
        "Applications and Extensions",
        "Chapter Review"
      ],
      writingStyle: "academic",
      includeProofs: true,
      advancedTopics: true
    },
    
    college: {
      chapterStructure: [
        "Abstract",
        "Prerequisites", 
        "Theoretical Development",
        "Lemmas and Theorems",
        "Proofs and Derivations",
        "Applications",
        "Exercises",
        "Further Reading"
      ],
      writingStyle: "formal",
      rigorousProofs: true,
      researchConnections: true
    }
  },

  // Science templates
  science: {
    elementary: {
      chapterStructure: [
        "Wonder Questions",
        "What Scientists Do",
        "Amazing Discoveries",
        "Try This At Home",
        "Science in Your World",
        "New Words We Learned"
      ],
      includeExperiments: "simple",
      safetyLevel: "basic",
      curiosityFocus: true
    },
    
    middleSchool: {
      chapterStructure: [
        "Scientific Inquiry",
        "Background Knowledge",
        "Observations and Data",
        "Experiments and Investigations", 
        "Analysis and Conclusions",
        "Real-World Applications",
        "Vocabulary and Concepts"
      ],
      includeLabWork: true,
      scientificMethod: true,
      careerConnections: true
    },
    
    highSchool: {
      chapterStructure: [
        "Essential Questions",
        "Scientific Principles",
        "Evidence and Data Analysis",
        "Laboratory Investigations",
        "Mathematical Models",
        "Technology Applications",
        "Societal Implications",
        "Assessment"
      ],
      quantitativeAnalysis: true,
      collegePrepFocus: true,
      researchMethods: true
    }
  },

  // Literature templates  
  literature: {
    middleSchool: {
      chapterStructure: [
        "Getting to Know the Text",
        "Understanding the Story",
        "Characters and Their Journeys", 
        "Themes and Messages",
        "Author's Craft",
        "Making Connections",
        "Creative Response"
      ],
      includeSummaries: true,
      vocabularySupport: "extensive",
      culturalContext: "basic"
    },
    
    highSchool: {
      chapterStructure: [
        "Historical and Cultural Context",
        "Literary Analysis Framework",
        "Close Reading and Interpretation",
        "Character Development and Motivation",
        "Themes and Symbolic Elements", 
        "Literary Devices and Techniques",
        "Critical Perspectives",
        "Comparative Analysis"
      ],
      criticalThinking: true,
      primarySources: true,
      researchComponent: true
    }
  },

  // History templates
  history: {
    elementary: {
      chapterStructure: [
        "Timeline Adventure",
        "Meet the People", 
        "Important Events",
        "Daily Life Back Then",
        "How We Know",
        "Connections to Today"
      ],
      storytellingApproach: true,
      visualTimelines: true,
      culturalDiversity: true
    },
    
    middleSchool: {
      chapterStructure: [
        "Historical Context",
        "Key Figures and Leaders",
        "Major Events and Turning Points",
        "Causes and Effects",
        "Primary Source Evidence",
        "Multiple Perspectives", 
        "Historical Significance",
        "Connections to Present"
      ],
      sourceAnalysis: "basic",
      multiplePerspectives: true,
      geographicContext: true
    },
    
    highSchool: {
      chapterStructure: [
        "Chronological Framework", 
        "Historiographical Perspectives",
        "Primary Source Analysis",
        "Social, Political, Economic Factors",
        "Continuity and Change",
        "Comparative Analysis",
        "Historical Interpretation",
        "Contemporary Relevance"
      ],
      documentBasedQuestions: true,
      historicalThinking: true,
      researchSkills: true
    }
  }
};

/**
 * Assessment question templates by subject and type
 */
export const assessmentTemplates = {
  mathematics: {
    multipleChoice: {
      template: "What is the value of {expression}?",
      options: 4,
      includeDistractors: true,
      showWork: false
    },
    
    shortAnswer: {
      template: "Calculate {problem}. Show your work.",
      requiresWork: true,
      partialCredit: true,
      wordLimit: 100
    },
    
    problemSolving: {
      template: "A {context} problem: {scenario}. Find {target}.",
      requiresWork: true,
      multiStep: true,
      realWorld: true
    },
    
    proof: {
      template: "Prove that {statement} using {method}.",
      requiresLogic: true,
      formalFormat: true,
      stepByStep: true
    }
  },

  science: {
    multipleChoice: {
      template: "Which of the following best explains {phenomenon}?",
      options: 4,
      includeGraphs: true,
      conceptual: true
    },
    
    labAnalysis: {
      template: "Based on the experimental data: {data}. What can you conclude about {hypothesis}?",
      requiresAnalysis: true,
      dataInterpretation: true,
      scientificReasoning: true
    },
    
    designExperiment: {
      template: "Design an experiment to test {hypothesis}. Include {requirements}.",
      openEnded: true,
      creativeProblemSolving: true,
      scientificMethod: true
    }
  }
};

/**
 * Interactive content elements
 */
export const interactiveElements = {
  mathematics: {
    graphingCalculator: {
      type: "widget",
      description: "Interactive graphing tool",
      subjects: ["algebra", "calculus", "statistics"]
    },
    
    geometryConstructor: {
      type: "tool", 
      description: "Build geometric constructions",
      subjects: ["geometry", "trigonometry"]
    },
    
    formulaBuilder: {
      type: "interactive",
      description: "Step-by-step formula derivation",
      subjects: ["algebra", "physics"]
    }
  },
  
  science: {
    virtualLab: {
      type: "simulation",
      description: "Conduct experiments safely",
      subjects: ["chemistry", "physics", "biology"]
    },
    
    moleculeViewer: {
      type: "3d-model",
      description: "Explore molecular structures", 
      subjects: ["chemistry", "biology"]
    },
    
    dataAnalyzer: {
      type: "tool",
      description: "Analyze experimental data",
      subjects: ["all-sciences"]
    }
  }
};

/**
 * Multimedia content suggestions
 */
export const multimediaContent = {
  videos: {
    conceptExplanation: {
      duration: "3-5 minutes",
      style: "animated",
      purpose: "Introduce key concepts"
    },
    
    solvedExample: {
      duration: "5-10 minutes", 
      style: "screencast",
      purpose: "Show problem-solving process"
    },
    
    realWorldApplication: {
      duration: "8-12 minutes",
      style: "documentary",
      purpose: "Connect to practical applications"
    }
  },
  
  animations: {
    processVisualization: {
      type: "step-by-step",
      interactivity: "clickable",
      purpose: "Show complex processes"
    },
    
    conceptDemonstration: {
      type: "loop",
      interactivity: "hover",
      purpose: "Illustrate abstract concepts"
    }
  },
  
  simulations: {
    virtualExperiment: {
      type: "interactive",
      complexity: "medium",
      purpose: "Safe experimentation"
    },
    
    modelBuilder: {
      type: "constructive", 
      complexity: "high",
      purpose: "Build understanding through creation"
    }
  }
};

/**
 * Accessibility guidelines for content creation
 */
export const accessibilityGuidelines = {
  textContent: {
    readabilityLevel: "age-appropriate",
    fontRequirements: "sans-serif, minimum 12pt",
    contrastRatio: "4.5:1 minimum",
    lineSpacing: "1.5x minimum"
  },
  
  visualContent: {
    altTextRequired: true,
    colorNotSoleIndicator: true,
    captionsForVideos: true,
    audioDescriptions: "when needed"
  },
  
  interactive: {
    keyboardNavigable: true,
    screenReaderCompatible: true,
    appropriateLabels: true,
    timeoutWarnings: true
  },
  
  cognitive: {
    clearNavigation: true,
    consistentLayout: true,
    progressIndicators: true,
    errorPrevention: true
  }
};